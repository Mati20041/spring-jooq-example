buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('nu.studer:gradle-jooq-plugin:2.0.9')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'nu.studer.jooq'

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
            srcDirs 'src/main/generated-java'
        }
    }
}


group = 'pl.mati'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.flywaydb:flyway-core')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-mustache')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	jooqRuntime('org.postgresql:postgresql:42.1.4')
}

jooq {
	version = '3.10.1'
	edition = 'OSS'
	sample(sourceSets.main) {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/jooqdemo'
			user = 'maint_usr'
			password = 'example'
            schema='test'
		}
		generator {
			generate {
				relations = true
				deprecated = false
				records = true
				immutablePojos = true
				fluentSetters = true
                sequences = true
			}
			target {
				packageName = 'pl.mati.jooqdemo.model'
				directory = 'src/main/generated-java'
			}
		}
	}
}